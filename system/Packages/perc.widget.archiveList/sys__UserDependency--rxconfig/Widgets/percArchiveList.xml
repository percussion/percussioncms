<?xml version="1.0" encoding="UTF-8"?>
<Widget>
    <WidgetPrefs title="Archives"
                 contenttype_name="percArchiveList"
                 category="blog,search"
                 description="Display of summary of pages published grouped by date"
                 author="Percussion Software Inc"
                 thumbnail="/rx_resources/widgets/archiveList/images/widgetIconArchive.gif"
                 preferred_editor_width="800"
                 preferred_editor_height="685"
                 is_responsive="true"/>
    <Resource href="/perc-common-ui/js/perc_common_ui.js"
              type="javascript"
              placement="head" />
    <UserPref name="layout"
              display_name="Layout"
              required="true"
              default_value="perc-list-hierarchical"
              datatype="enum">
        <EnumValue value="perc-list-hierarchical" display_value="Hierarchical by year" />
        <EnumValue value="perc-list-flat" display_value="List by months" />
    </UserPref>
    <UserPref name="list_maxlength"
              display_name="Number of entries to show"
              datatype="number" />
    <UserPref name="locale"
              display_name="Locale"
              required="true"
              default_value="en-US"
              datatype="enum">
        <EnumValue value="sq-AL" display_value="Albanian Albania (AL)"/>
        <EnumValue value="ar-DZ" display_value="Arabic Algeria (DZ)"/>
        <EnumValue value="ar-BH" display_value="Arabic Bahrain (BH)"/>
        <EnumValue value="ar-EG" display_value="Arabic Egypt (EG)"/>
        <EnumValue value="ar-IQ" display_value="Arabic Iraq (IQ)"/>
        <EnumValue value="ar-JO" display_value="Arabic Jordan (JO)"/>
        <EnumValue value="ar-KW" display_value="Arabic Kuwait (KW)"/>
        <EnumValue value="ar-LB" display_value="Arabic Lebanon (LB)"/>
        <EnumValue value="ar-LY" display_value="Arabic Libya (LY)"/>
        <EnumValue value="ar-MA" display_value="Arabic Morocco (MA)"/>
        <EnumValue value="ar-OM" display_value="Arabic Oman (OM)"/>
        <EnumValue value="ar-QA" display_value="Arabic Qatar (QA)"/>
        <EnumValue value="ar-SA" display_value="Arabic Saudi Arabia (SA)"/>
        <EnumValue value="ar-SD" display_value="Arabic Sudan (SD)"/>
        <EnumValue value="ar-SY" display_value="Arabic Syria (SY)"/>
        <EnumValue value="ar-TN" display_value="Arabic Tunisia (TN)"/>
        <EnumValue value="ar-AE" display_value="Arabic United Arab Emirates (AE)"/>
        <EnumValue value="ar-YE" display_value="Arabic Yemen (YE)"/>
        <EnumValue value="be-BY" display_value="Belarusian Belarus (BY)"/>
        <EnumValue value="bg-BG" display_value="Bulgarian Bulgaria (BG)"/>
        <EnumValue value="ca-ES" display_value="Catalan Spain (ES)"/>
        <EnumValue value="zh-CN" display_value="Chinese China (CN)"/>
        <EnumValue value="zh-SG" display_value="Chinese Singapore (SG)"/>
        <EnumValue value="zh-HK" display_value="Chinese Hong Kong (HK)"/>
        <EnumValue value="zh-TW" display_value="Chinese Taiwan (TW)"/>
        <EnumValue value="hr-HR" display_value="Croatian Croatia (HR)"/>
        <EnumValue value="cs-CZ" display_value="Czech Czech Republic (CZ)"/>
        <EnumValue value="da-DK" display_value="Danish Denmark (DK)"/>
        <EnumValue value="nl-BE" display_value="Dutch Belgium (BE)"/>
        <EnumValue value="nl-NL" display_value="Dutch Netherlands (NL)"/>
        <EnumValue value="en-AU" display_value="English Australia (AU)"/>
        <EnumValue value="en-CA" display_value="English Canada (CA)"/>
        <EnumValue value="en-IN" display_value="English India (IN)"/>
        <EnumValue value="en-IE" display_value="English Ireland (IE)"/>
        <EnumValue value="en-MT" display_value="English Malta (MT)"/>
        <EnumValue value="en-NZ" display_value="English New Zealand (NZ)"/>
        <EnumValue value="en-PH" display_value="English Philippines (PH)"/>
        <EnumValue value="en-SG" display_value="English Singapore (SG)"/>
        <EnumValue value="en-ZA" display_value="English South Africa (ZA)"/>
        <EnumValue value="en-GB" display_value="English United Kingdom (GB)"/>
        <EnumValue value="en-US" display_value="English United States (US)"/>
        <EnumValue value="et-EE" display_value="Estonian Estonia (EE)"/>
        <EnumValue value="fi-FI" display_value="Finnish Finland (FI)"/>
        <EnumValue value="fr-BE" display_value="French Belgium (BE)"/>
        <EnumValue value="fr-CA" display_value="French Canada (CA)"/>
        <EnumValue value="fr-FR" display_value="French France (FR)"/>
        <EnumValue value="fr-LU" display_value="French Luxembourg (LU)"/>
        <EnumValue value="fr-CH" display_value="French Switzerland (CH)"/>
        <EnumValue value="de-AT" display_value="German Austria (AT)"/>
        <EnumValue value="de-DE" display_value="German Germany (DE)"/>
        <EnumValue value="de-LU" display_value="German Luxembourg (LU)"/>
        <EnumValue value="de-CH" display_value="German Switzerland (CH)"/>
        <EnumValue value="el-CY" display_value="Greek Cyprus (CY)"/>
        <EnumValue value="el-GR" display_value="Greek Greece (GR)"/>
        <EnumValue value="iw-IL" display_value="Hebrew Israel (IL)"/>
        <EnumValue value="hi-IN" display_value="Hindi India (IN)"/>
        <EnumValue value="hu-HU" display_value="Hungarian Hungary (HU)"/>
        <EnumValue value="is-IS" display_value="Icelandic Iceland (IS)"/>
        <EnumValue value="in-ID" display_value="Indonesian Indonesia (ID)"/>
        <EnumValue value="ga-IE" display_value="Irish Ireland (IE)"/>
        <EnumValue value="it-IT" display_value="Italian Italy (IT)"/>
        <EnumValue value="it-CH" display_value="Italian Switzerland (CH)"/>
        <EnumValue value="ja-JP" display_value="Japanese Japan (JP)"/>
        <EnumValue value="ko-KR" display_value="Korean South Korea (KR)"/>
        <EnumValue value="lv-LV" display_value="Latvian Latvia (LV)"/>
        <EnumValue value="lt-LT" display_value="Lithuanian Lithuania (LT)"/>
        <EnumValue value="mk-MK" display_value="Macedonian Macedonia (MK)"/>
        <EnumValue value="ms-MY" display_value="Malay Malaysia (MY)"/>
        <EnumValue value="mt-MT" display_value="Maltese (mt) Malta (MT)"/>
        <EnumValue value="no-NO" display_value="Norwegian Norway (NO)"/>
        <EnumValue value="nb-NO" display_value="Norwegian BokmÃ¥l Norway (NO)"/>
        <EnumValue value="nn-NO" display_value="Norwegian Nynorsk Norway (NO)"/>
        <EnumValue value="pl-PL" display_value="Polish Poland (PL)"/>
        <EnumValue value="pt-BR" display_value="Portuguese Brazil (BR)"/>
        <EnumValue value="pt-PT" display_value="Portuguese Portugal (PT)"/>
        <EnumValue value="ro-RO" display_value="Romanian Romania (RO)"/>
        <EnumValue value="ru-RU" display_value="Russian Russia (RU)"/>
        <EnumValue value="sr-BA" display_value="Serbian Bosnia and Herzegovina (BA)"/>
        <EnumValue value="sr-ME" display_value="Serbian Montenegro (ME)"/>
        <EnumValue value="sr-RS" display_value="Serbian Serbia (RS)"/>
        <EnumValue value="sk-SK" display_value="Slovak Slovakia (SK)"/>
        <EnumValue value="sl-SI" display_value="Slovenian Slovenia (SI)"/>
        <EnumValue value="es-AR" display_value="Spanish Argentina (AR)"/>
        <EnumValue value="es-BO" display_value="Spanish Bolivia (BO)"/>
        <EnumValue value="es-CL" display_value="Spanish Chile (CL)"/>
        <EnumValue value="es-CO" display_value="Spanish Colombia (CO)"/>
        <EnumValue value="es-CR" display_value="Spanish Costa Rica (CR)"/>
        <EnumValue value="es-DO" display_value="Spanish Dominican Republic (DO)"/>
        <EnumValue value="es-EC" display_value="Spanish Ecuador (EC)"/>
        <EnumValue value="es-SV" display_value="Spanish El Salvador (SV)"/>
        <EnumValue value="es-GT" display_value="Spanish Guatemala (GT)"/>
        <EnumValue value="es-HN" display_value="Spanish Honduras (HN)"/>
        <EnumValue value="es-MX" display_value="Spanish Mexico (MX)"/>
        <EnumValue value="es-NI" display_value="Spanish Nicaragua (NL)"/>
        <EnumValue value="es-PA" display_value="Spanish Panama (PA)"/>
        <EnumValue value="es-PY" display_value="Spanish Paraguay (PY)"/>
        <EnumValue value="es-PE" display_value="Spanish Peru (PE)"/>
        <EnumValue value="es-PR" display_value="Spanish Puerto Rico (PR)"/>
        <EnumValue value="es-ES" display_value="Spanish Spain (ES)"/>
        <EnumValue value="es-US" display_value="Spanish United States (US)"/>
        <EnumValue value="es-UY" display_value="Spanish Uruguay (UY)"/>
        <EnumValue value="es-VE" display_value="Spanish Venezuela (VE)"/>
        <EnumValue value="sv-SE" display_value="Swedish Sweden (SE)"/>
        <EnumValue value="th-TH" display_value="Thai Thailand (TH)"/>
        <EnumValue value="tr-TR" display_value="Turkish Turkey (TR)"/>
        <EnumValue value="uk-UA" display_value="Ukrainian Ukraine (UA)"/>
        <EnumValue value="vi-VN" display_value="Vietnamese Vietnam (VN)"/>

    </UserPref>

    <CssPref name="rootclass"
             display_name="CSS root class"
             datatype="string" />
    <CssPref name="summaryclass"
             display_name="CSS page summary class"
             datatype="string" />
    <Code type="jexl">
        <![CDATA[
    $linkContext = $perc.linkContext;
    $assetItems = $rx.pageutils.widgetContents($sys.assemblyItem, $perc.widget, null, null);
    $perc.setWidgetContents($assetItems);
    $isEditMode = $perc.isEditMode();
	$isPreviewMode = $perc.isPreviewMode();
    ##Get widget user prefs
    $archiveListMax = $perc.widget.item.properties.get('list_maxlength');
    $archiveListMaxNum = 10000;
    if($archiveListMax != null && $archiveListMax != "")
    {
        $archiveListMaxNum = $tools.number.toNumber($archiveListMax);
    }
    $archiveLayout = $perc.widget.item.properties.get('layout');
    if($archiveLayout == null)
       $archiveLayout = "perc-list-hierarchical";

    $archiveLocale = $perc.widget.item.properties.get('locale');
    if($archiveLocale == null)
       $archiveLocale = "en-US";
    ##Get widget csas prefs
    $rootclass = $perc.widget.item.cssProperties.get('rootclass');

    if (!empty($rootclass)) {
       $rootclass = $rootclass + " ";
    }

    $currentDate =  $tools.date.format("yyyy-MM-dd'T'HH:mm:ss", $tools.date.getDate());

    if ( ! $assetItems.isEmpty() ) {
        $assetItem = $assetItems.get(0);
        $query = $assetItem.getNode().getProperty('query_string').String;
        if (! $query.contains('<=')) {
            if ($query.contains('where'))
            {
                $query = $query + " and rx:sys_contentpostdate " + " <= '" + $currentDate + "'";
            }
            else
            {
                $query = $query + " where rx:sys_contentpostdate " + " <= '" + $currentDate + "'";
            }
        }
        $params = $rx.string.stringToMap(null);
        $params.put('query', $query);
        $finderName = "Java/global/percussion/widgetcontentfinder/perc_AutoWidgetContentFinder";
        $relresults =  $rx.pageutils.widgetContents($sys.assemblyItem, $perc.widget, $finderName, $params);
        $blogYears = $rx.pageutils.getProcessedBlogs($relresults);
        $title = $rx.pageutils.html($assetItem, 'displaytitle');
        $rowtag = $tools.alternator.auto('perc-list-odd', 'perc-list-even');

        ##Archive list query starts
        ##Gets the individual field values
        $titleContains = $assetItem.getNode().getProperty('query_title_contains').String;
        $publishedAfter = $assetItem.getNode().getProperty('query_published_after').String;
        $publishedBefore = $assetItem.getNode().getProperty('query_published_before').String;
        $sitePath = $assetItem.getNode().getProperty('query_site_path').String;
        $templatesList = $assetItem.getNode().getProperty('query_template_list').String;
        $archiveResultPage = $assetItem.getNode().getProperty('archive_page_result').String;
        ##Builds the criteria
        $criteria = "[";
        $criteria = $criteria + "&quot;type = 'page'&quot;";
        $criteriaSep = ", ";
        if ($titleContains != null && $titleContains != "")
        {
            $criteria = $criteria + $criteriaSep + "&quot;dcterms:title LIKE '%" + $titleContains +"%'&quot;";
        }

        if ($publishedAfter != null && $publishedAfter != ""){
            $sd = $tools.date.toDate("MM/dd/yyyy",$publishedAfter);
            $criteria = $criteria +  $criteriaSep + "&quot;dcterms:created >= '" + $tools.date.format("yyyy-MM-dd'T'HH:mm:ss", $sd) + "'&quot;";
        }
        if ($publishedBefore != null && $publishedBefore != ""){
            $ed = $tools.date.toDate("MM/dd/yyyy",$publishedBefore);
            $criteria = $criteria +  $criteriaSep +  "&quot;dcterms:created < '" + $tools.date.format("yyyy-MM-dd'T'HH:mm:ss", $ed) + "'&quot;";
        }

        if ($sitePath != null && $sitePath != "" && $sitePath != "//Sites")
        {
            $temppath = $sitePath.replace("//Sites/", "");
            if($temppath.indexOf("/") > 0)
            {
                $temppaths = $temppath.split("/");
                $criteria = $criteria  +  $criteriaSep +  "&quot;site = '" + $temppaths[0] + "'&quot;";
                $folderpath = "";
                $counter = 1;
                while($counter < $temppaths.size())
                {
                    $folderpath = $folderpath + "/" + $temppaths[$counter];
                    $counter = $counter + 1;
                }
                $criteria = $criteria  +  $criteriaSep +  "&quot;folder LIKE '" + $folderpath + "/%'&quot;";
            }
            else
            {
                $criteria = $criteria  +  $criteriaSep +  "&quot;site = '" + $temppath + "'&quot;";
            }
        }
        if($templatesList != null && $templatesList != "")
        {
            $templateNameList = $rx.pageutils.templateNames($templatesList);
            if($templateNameList.size() == 1)
            {
                $criteria = $criteria  +  $criteriaSep +  "&quot;dcterms:source = '" + $templateNameList.get(0).toString() + "'&quot;";
            }
            else if($templateNameList.size() > 1)
            {
                $inCl = "(";
                $counter = 0;
                $templNameArray = $templateNameList.toArray();

                while($counter < $templNameArray.size())
                {
                    $inCl = $inCl + "'" + $templNameArray[$counter] + "'";
                    if($counter != $templNameArray.size()-1)
                    $inCl = $inCl + ", ";
                    $counter = $counter + 1;
                }
                $inCl = $inCl + ")";
                $criteria = $criteria  +  $criteriaSep +  "&quot;dcterms:source IN " + $inCl + "&quot;";
            }
        }

        $criteria = $criteria + "]";

        ##Build the query string for the delivery side archive list
        ##builds the order by clause

        $dynamicListData = "{" + "&quot;criteria&quot;:" + $criteria;
        $dynamicListData = $dynamicListData + ", &quot;layout&quot;:&quot;" +$archiveLayout + "&quot;";
        if($archiveListMax != null)
        {
            $dynamicListData = $dynamicListData + ", &quot;numberEntries&quot;:&quot;" + $archiveListMax + "&quot;";
        }

        $dsUrl = $rx.pageutils.getDeliveryServer($sys.assemblyItem.PubServerId);

        $dynamicListData = $dynamicListData + ", &quot;deliveryurl&quot;:&quot;" + $dsUrl + "&quot;";

        $dynamicListData = $dynamicListData + ", &quot;archive_page_result&quot;:&quot;" +$archiveResultPage + "&quot;";
        $dynamicListData = $dynamicListData + ", &quot;isEditMode&quot; : &quot;" + $isEditMode + "&quot;";
        $dynamicListData = $dynamicListData + ", &quot;isPreviewMode&quot; : &quot;" + $isPreviewMode + "&quot;";

        $dynamicListData = $dynamicListData + "}";
        ##Archive list query ends
    }
    else {
        ;
    }

]]>
    </Code>
    <Content type="velocity"><![CDATA[
<div class="$!{rootclass} perc-archive-list" data-query="$!{dynamicListData}">
##This is a hidden div that holds the structure of the list when the category list output structure changes this hidden div and delivery side view
##should be modified to match the new structure.
#if ($title && $title.length() > 0)##
<div class="perc-archive-title">$title</div>
#end##
<div style="display:none" class="perc-archive-list-structure">
</div>
<div class="perc-archive-list-container">
#if( ! $perc.widgetContents.isEmpty() )##
#if($blogYears && $blogYears.size() > 0)##
## Split archive locale to get language and country
#if("" == "$!{archiveLocale}")##
#set($archiveLocale="en-US")##
#end##
##
##Setup Date Formatting
#set($formatterIn = $rx.pageutils.getDateFormatForString("MMMM d, yyyy"))##
#set($formatterOut = $rx.pageutils.getDateFormatFromLocale("MMMM",$locale))##
#if($archiveLayout == "perc-list-hierarchical")##
<ul class="perc-archive-list-wrapper perc-archive-hierarchical">
#foreach ($blogYear in $blogYears)##
#if($blogYear.getYearCount() > 0)##
#if($velocityCount <= $archiveListMaxNum)##
#set ($dateValue =  "January 01, "+ $blogYear.getYear())##
#set($date = $formatterIn.parse($dateValue))##
#set($dummy = $formatterOut.applyPattern("YYYY"))##
#set($year = $formatterOut.format($date))##
<li class="perc-archive-year"><a href="#">$year ($blogYear.getYearCount())</a>
<ul class="perc-archive-month-wrapper">
#foreach ($blogMonth in $blogYear.getMonths())##
#if($blogMonth.getCount() > 0)##
## Get Date from Blog Month
#set ($dateValue = $blogMonth.getMonth() + " 01, "+ $blogYear.getYear())##
## Formate Date
#set($date = $formatterIn.parse($dateValue))##
#set($dummy = $formatterOut.applyPattern("MMMMM"))##
#set($month = $formatterOut.format($date))##
#if($month.length() >0)##
#set($letter = $month.substring(0,1).toUpperCase())##
#set($properMonth = $letter + $month.substring(1))##
#else##
#set($properMonth =  $month)##
#end##
<li class="perc-archive-month"><a href="#">$properMonth ($blogMonth.getCount())</a></li>
#end##
#end##
</ul>
</li>
#end##
#end##
#end##
</ul>
#end##
#if($archiveLayout == "perc-list-flat")##
<ul class="perc-archive-list-container perc-archive-flat">
#foreach ($blogYear in $blogYears)##
#foreach ($blogMonth in $blogYear.getMonths())##
#if($blogMonth.getCount() > 0)##
#if($velocityCount <= $archiveListMaxNum)##
## Get Date from Blog Month
#set ($dateValue = $blogMonth.getMonth() + " 01, "+ $blogYear.getYear())##
## Formate Date
#set($date = $formatterIn.parse($dateValue))##
#set($dummy = $formatterOut.applyPattern("MMMMM"))##
#set($month = $formatterOut.format($date))##
#if($month.length()>1)##
#set($letter = $month.substring(0,1).toUpperCase())##
#set($properMonth = $letter + $month.substring(1))##
#else##
#set($properMonth =  $month)##
#end##
##
#set($dummy = $formatterOut.applyPattern("YYYY"))##
#set($year = $formatterOut.format($date))##
<li class="perc-archive-month"><a href="#">$properMonth $year ($blogMonth.getCount())</a></li>
#end##
#end##
#end##
#end##
</ul>
#end##
#end##
#elseif ($perc.isEditMode())##
#createEmptyWidgetContent("archivelist-sample-content", "This archive list widget is showing sample content.")##
#end##
</div>
</div>
]]>
    </Content>
</Widget>
